name: CI/CD Pipeline

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  NODE_VERSION: 22
  BUN_VERSION: latest

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]
    types: [opened, synchronize]
  workflow_dispatch:

jobs:
  avoid_redundant_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel redundant workflows
        uses: styfle/cancel-workflow-action@0.12.1
        with:
          access_token: ${{ secrets.GITHUB_TOKEN }}

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        job: [lint, unit_tests]
    defaults:
      run:
        working-directory: assessment-app
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - name: Install dependencies
        run: bun install

      - name: Run ${{ matrix.job }}
        run: bun run ${{ matrix.job == 'lint' && 'lint' || 'test:unit' }}

  deploy_preview:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: Preview
      url: ${{ steps.deploy_step.outputs.url }}
    defaults:
      run:
        working-directory: assessment-app
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - name: Install dependencies
        run: bun install

      - name: Install Vercel CLI
        run: bun add -g vercel@canary

      - name: Pull Vercel Environment Info
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}

      - id: deploy_step
        name: Deploy to Preview
        run: echo "url=$(vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }})" >> $GITHUB_OUTPUT

  deploy_production:
    needs: build
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' }}
    environment:
      name: Production
      url: ${{ steps.deploy_prod.outputs.url }}
    defaults:
      run:
        working-directory: assessment-app
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - name: Install dependencies
        run: bun install

      - name: Install Vercel CLI
        run: bun add -g vercel@canary

      - name: Pull Vercel Environment Info
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Start Vercel Dev
        run: bun run start &

      - name: Install ci dependencies
        run: bun i ci

      - name: Install Playwright browsers
        run: bunx playwright install --with-deps

      # - name: Run E2E tests
      #   run: bun run test:e2e

      - name: Deploy to Production
        id: deploy_prod
        run: echo "url=$(vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }})" >> $GITHUB_OUTPUT
